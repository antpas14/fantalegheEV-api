name: Publish package to GitHub Packages
on:
  release:
    types: [created]
  push:
    branches:
      - main
jobs:
  publish_java:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
      - name: Publish package
        run: mvn -U deploy || test 0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  publish_go:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.21

      - name: Generate code and push changes
        run: |
          # Cleanup generated OpenAPI code
          rm server.go
          
          # Generate the OpenAPI code
          go install github.com/deepmap/oapi-codegen/cmd/oapi-codegen@latest
          oapi-codegen -generate types,server -o server.go src/main/resources/api.yaml 
          
          # Configure Git user and email
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          
          # Check if there are changes to commit
          if [[ -n $(git status -s) ]]; then
            git add server.go
            git commit -m "Update generated code"
            git push --set-upstream origin $GITHUB_REF
          else
            echo "No changes to commit."
          fi
  publish_react:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '20.x'
          registry-url: 'https://npm.pkg.github.com'
          # Defaults to the user or organization that owns the workflow file
          scope: '@organizationName'
      - name: Install dependencies
        run: yarn && npm install @openapitools/openapi-generator-cli
      - name: Generate React code
        run: |
         npx openapi-generator-cli generate \
          -i src/main/resources/api.yaml \
          -g typescript-axios \
          -o src/generated
      - name: Publish package
        run: yarn publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


